/* -*- C -*-
  These are defined in myisa.h

#define RS              ((inst >> 16) & 0x1f)
#define RT              ((inst >> 11) & 0x1f)   
#define RD              ((inst >> 21) & 0x1f)

#define IMME            (inst & 0xffff)
*/

/*
DEFLINK(ALUREG_LINK, 0x00, "alureg_link", 0, 0x3f)
*/

#define ADD_IMPL							\
  {									\
	SET_GPR(RD,GPR(RS)+GPR(RT));					\
          printf("DEBUG:ADD\n");\
}
DEFINST(ADD,			0x01,
	"add",			"",
	NA,			F_TRAP,
	DNA, DNA, DNA,		DNA, DNA, DNA, DNA)

#define ADDI_IMPL							\
  {									\
          SET_GPR(RD,GPR(RS)+(int)OFFSET);                              \
          printf("DEBUG:ADDI %d\n",GPR(RS)+(int)OFFSET);                        \
  }
DEFINST(ADDI,			0x02,
	"addi",			"",
	NA,			F_TRAP,
	DNA, DNA, DNA,		DNA, DNA, DNA, DNA)

#define LW_IMPL								\
  {									\
	enum md_fault_type _fault;					\
	word_t _result;							\
									\
	_result = READ_WORD(GPR(RS)+OFFSET,_fault );			\
	if(_fault != md_fault_none)					\
		DECLARE_FAULT(_fault);					\
	SET_GPR(RD, _result);						\
          printf("DEBUG:LW\n");\
}
DEFINST(LW,			0x03,
	"lw",			"",
	NA,			F_TRAP,
	DNA, DNA, DNA,		DNA, DNA, DNA, DNA)

#define SW_IMPL								\
  {									\
	enum md_fault_type _fault;					\
									\
	WRITE_WORD(GPR(RD),GPR(RS)+OFFSET,_fault );			\
	if(_fault != md_fault_none)					\
		DECLARE_FAULT(_fault);					\
          printf("DEBUG:SW\n");\        
  }
DEFINST(SW,			0x04,
	"sw",			"",
	NA,			F_TRAP,
	DNA, DNA, DNA,		DNA, DNA, DNA, DNA)

#define SWP_IMPL							\
  {									\
	int tmp;							\
	tmp = GPR(RS);							\
	SET_GPR(RS, GPR(RD));						\
	SET_GPR(RD, tmp);						\
  }
DEFINST(SWP,			0x05,
	"swp",			"",
	NA,			F_TRAP,
	DNA, DNA, DNA,		DNA, DNA, DNA, DNA)

/* #define SUBI_IMPL							\ */
/*   {									\ */
/* 	SET_GPR(RD,GPR(RS)-IMME);					\ */
/*   } */
/* DEFINST(SUBI,			0x10, */
/* 	"subi",			"", */
/* 	NA,			F_TRAP, */
/* 	DNA, DNA, DNA,		DNA, DNA, DNA, DNA) */

#define SLT_IMPL							\
  {									\
          SET_GPR(RD, GPR(RS)<GPR(RT));                                 \
          printf("DEBUG:SLT\n");\
  }
DEFINST(SLT,			0x11,
	"slt",			"",
	NA,			F_TRAP,
	DNA, DNA, DNA,		DNA, DNA, DNA, DNA)

#define BEQ_IMPL							\
  {									\
          printf("DEBUG:BEQ to %d?%d\n",CPC+(OFFSET<<2)+4,GPR(RS)==GPR(RD));            \
          if(GPR(RS)==GPR(RD)) SET_NPC(CPC+(OFFSET<<2)+4);              \
  }
DEFINST(BEQ,			0x12,
	"beq",			"",
	NA,			F_TRAP,
	DNA, DNA, DNA,		DNA, DNA, DNA, DNA)

#define BNE_IMPL							\
  {									\
          printf("DEBUG:BNE to %d?%d\n",CPC+(OFFSET<<2)+4,GPR(RS)!=GPR(RD));            \
          if(GPR(RS)!=GPR(RD)) SET_NPC(CPC+(OFFSET<<2)+4);              \
  }
DEFINST(BNE,			0x13,
	"bne",			"",
	NA,			F_TRAP,
	DNA, DNA, DNA,		DNA, DNA, DNA, DNA)

#define SWI_IMPL							\
  {									\
	SYSCALL(inst);							\
          printf("DEBUG:SWI\n");\
  }
DEFINST(SWI,			0x3f,
	"swi",			"",
	NA,			F_TRAP,
	DNA, DNA, DNA,		DNA, DNA, DNA, DNA)

/*
CONNECT(ALUREG_LINK)
#define ADD_IMPL							\
  {									\
	SET_GPR(RD,GPR(RS)+GPR(RT));					\
  }
DEFINST(ADD,			0x20,
	"add",			"",
	IntALU,			F_ICOMP,
	DNA,DNA,DNA,		DNA,DNA,DNA,DNA)
*/

#undef ADD_IMPL
#undef ADDI_IMPL
#undef LW_IMPL
#undef SW_IMPL
#undef SWP_IMPL
#undef SWI_IMPL
/*#undef ADD_IMPL*/

#undef DEFINST
#undef DEFLINK
#undef CONNECT
#undef DEFUOP
